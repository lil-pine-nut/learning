# Logger组件在此系统中被分为：TRACE, DEBUG、INFO、WARN、ERROR和FATAL。顺序: TRACE < DEBUG < INFO < WARN < ERROR < FATAL
log4j.rootLogger = TRACE, LogFile, Console

# 指定append类型，因为我们这需要按天来生成，同时文件名也要可以按时间来命名
log4j.appender.LogFile=org.apache.log4j.DailyRollingFileAppender

# 指定日志文件
log4j.appender.LogFile.File=./logs/log.log

# '.'yyyy-MM : 每个月生成一个新的日志文件
# '.'yyyy-ww : 每周
# '.'yyyy-MM-dd:每天
# '.'yyyy-MM-dd-a:每天2次
# '.'yyyy-MM-dd-HH：每小时
# '.'yyyy-MM-dd-HH-mm : 每分钟
log4j.appender.LogFile.DatePattern='.'yyyy-MM-dd-HH-mm

# 设置为true表示向日志文件中追加信息而不是截断。
log4j.appender.LogFile.Append=true

# 当设置为true表示每一次有append event事件，输出流就会被刷新到文件中。
log4j.appender.LogFile.ImmediateFlush=true

#Threshold 这个属性指定了日志级别的阈值。日志级别低于阈值的事件将不会被appender记录下来。
log4j.appender.Console.Threshold=ALL

# 指定消息输出的格式
log4j.appender.LogFile.layout=org.apache.log4j.PatternLayout
log4j.appender.LogFile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%M] - %m %n

# 信息直接 Console 到控制台
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.Target=System.out
log4j.appender.Console.Threshold=ALL
log4j.appender.Console.layout=org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%M] - %m %n