# log4cplus配置文件编写及使用: https://blog.csdn.net/fksec/article/details/41546189
# Logger组件在此系统中被分为：TRACE, DEBUG、INFO、WARN、ERROR和FATAL。顺序: TRACE < DEBUG < INFO < WARN < ERROR < FATAL
log4cplus.rootLogger = TRACE, LogFile, Console

# 指定append类型，因为我们这需要按天来生成，同时文件名也要可以按时间来命名
# 所以选择TimeBasedRollingFileAppender
log4cplus.appender.LogFile=log4cplus::TimeBasedRollingFileAppender

# 指定文件路径名，可以是绝对路径也可以是相对路径，可以使用时间匹配符来动态定义文件名。log4Cplus会根据你使用到的时间自动创建文件。比如，你的文件名是由年月构成，那每个月都会生成新的文件。
# %d{yyyy-MM-dd-HH-mm} 年-月-日-时-分
log4cplus.appender.LogFile.FilenamePattern=./logs/log-%d{yyyy-MM-dd}.log

# 设置为true表示向日志文件中追加信息而不是截断。
log4cplus.appender.LogFile.Append=true

# 设置最大的文件数，超过这个数值删除时间最久的文件。
log4cplus.appender.LogFile.MaxHistory=999

# 当设置为true表示每一次有append event事件，输出流就会被刷新到文件中。
log4cplus.appender.LogFile.ImmediateFlush=true

# 默认值为true关闭的时候回滚到一个新的文件中，
# 源码中编译可能有bug，我们设置为false，不使用这个功能。
log4cplus.appender.LogFile.RollOnClose=false

# 如果为true，那么如果指定的日志路径名中如果有文件夹不存在，则会创建文件夹。
log4cplus.appender.LogFile.CreateDirs=true

#Threshold 这个属性指定了日志级别的阈值。日志级别低于阈值的事件将不会被appender记录下来。
log4cplus.appender.Console.Threshold=ALL

# 指定消息输出的格式
log4cplus.appender.LogFile.layout=log4cplus::PatternLayout
log4cplus.appender.LogFile.layout.ConversionPattern=%D{%Y-%m-%d %H:%M:%S.%q} %-5p [%M] - %m %n
# %Q-(0-999.999)毫秒 %q-(0-999)毫秒 %c 是打印即LogFile对象的命名, %T为线程ID, %M为函数名, %F为文件名, %L为


# 信息直接 Console 到控制台
log4cplus.appender.Console=log4cplus::ConsoleAppender
log4cplus.appender.Console.Target=System.out
log4cplus.appender.Console.Threshold=ALL
log4cplus.appender.Console.layout=log4cplus::PatternLayout
log4cplus.appender.Console.layout.ConversionPattern=%D{%Y-%m-%d %H:%M:%S.%q} %-5p [%M] - %m %n